
1. 소스코드 자동완성 [1번 단축키]
  - (시나리오1) 작성중인 MapDataUtil 자동완성 
     => saGuGurtprrcprmmPrereceivingPremiumHandlingBCServiceImpl.updatePrrcPrmm  (하단참조) 

  - (시나리오2) AI가 자동으로 나머지소스 작성 
     => 융자연체소스 for문 안닫힌 케이스

2. 용어자동변환 [2번 단축키]
  - (시나리오1) String 선수수수료 --> String prrcPrmm = null;	//선수수수료

  - (시나리오2) MapDataUtil.setString(inDoc, 선수수수료, prrcPrmm ); 
		--> MapDataUtil.setString(inDoc, "PRRC_PRMM", prrcPrmm );  //선수수수료

  - (시나리오3) MapDataUtil.getString(pDoc, 선수수수료); 
		--> MapDataUtil.getString(pDoc, "PRRC_PRMM");  //선수수수료

  - (시나리오4) 선수수수료 --> //선수수수료 PRRC_PRMM prrcPrmm

  - (시나리오5) 카멜케이스<-> 스네이크케이스 자동변환
       - PRRC_PRMM --> prrcPrmm //선수수수료
       - prrcPrmm --> PRRC_PRMM //선수수수료

3. 명령어를 통한 프로그램 작성 [3번 단축키]
  - (시나리오1) 테이블명주고 MapDataUtil 자동생성
     => "ZFN_FNCN_OVRD 테이블 컬럼으로 MapDataUtil.setString로 셋팅해줘"
             ----> 컬럼전체로 셋팅 pDoc등 설정 안되면 AI가 알아서...
  - (시나리오2) 프로그램 작성능력 검증 
     => http통신으로 카카오 우편서비스 전자서명 상태를 json으로 받아서 발송했던 우편서비스 상태값을 update해주는 프로그램을 만들어줘

4. 주석설명 자동 생성 [4번 단축키]
  - (시나리오1) 주석 지워진 메서드 주석생성 (12.4. 자체시연때 돌렸던 프로그램)

5. 쿼리작성 [5번 단축키]
  - (시나리오1) ZGU_GUAS_H, ZSA_CNRC_PRTY, ZCU_MMBR_CG_V3 테이블을 활용하여 2024년도 보증발급 현황 조회 쿼리 작성해줘. 조회항목은 다음과 같이 작성해줘 
다음 : 조합원번호, 당사자명, 관할영업점, 계약관리번호, 보증서번호, 보증상품, 보증금액, 수수료, 주계약명






----------------------------------------------
(참고1 - 아래소스로 테스트하면서 편집후 예상 )
public Map updatePrrcPrmm(Map pDoc) throws ElException, Exception {
        Map result = new HashMap();
        Map tempDoc = null;
        Map inDoc = null;e        Map outDoc = null;
        String timestamp = null;
        String empno = null;
        String errCd = null;
        // 조회구분코드
        String inqrDscd = null;
        String stacDate = null;
        String guasNo = null;
        String brcd = null;
        String prcd = null;
        String cnrcMnno = null;
        String issuDate = null;
        String bnAmt = null;
        String prmmClclStda = null;
        String prmmClclEnda = null;
        String dcnt = null;
        String prmm = null;
        String prrcPrmm = null;
        String afterPrrcPrmm = null;
        ArrayList<Map> tempList = null;
        ArrayList<Map> paramTempList = null;
        // -- 현재 월의 마지막 영업일자
        String beBzda;
        // -- 다음 월의 마지막 영업일자
        String afBzda;
        // -- 현재 월일 마지막 일자
        String lastDate;
        try {
            //xda = XDAFactory.getXDA(Constants.KEEP_CONNECTION);
            AppLog.info( ("") /* 주석처리(as-is) XMLUtil.indent(pDoc)*/);
            // 사용자 정보 세팅(최종변경일시, 최종변경자 ID)
            // 최종변경일시
            timestamp = (String) UserHeaderUtil.getInstance().getTimestamp();
            // 최종변경자ID
            empno = (String) UserHeaderUtil.getInstance().getEmpno();
            // 변수값이 널이면 에러처리
            if (GUUtil.isEmpty(timestamp) || GUUtil.isEmpty(empno)) {
                errCd = "E05061";
                throw new CgAppUserException("CG_ERROR", 0, CodeUtil.getCodeValue("CGMsgCode", "E", errCd), errCd);
            }
            inqrDscd = MapDataUtil.getString(pDoc, "INQR_COND_DSCD");
            stacDate = MapDataUtil.getString(pDoc, "STAC_DATE");
            brcd = MapDataUtil.getString(pDoc, "BRCD");
            prcd = MapDataUtil.getString(pDoc, "PRCD");
            guasNo = MapDataUtil.getString(pDoc, "GUAS_NO");
            tempList =  (ArrayList<Map>) MapDataUtil.getList(pDoc, "GUAS");
//            tempList = (ArrayList<Map>) MapDataUtil.getList(tempDoc, "vector");
            inDoc = new HashMap();
            // 기준년월
            MapDataUtil.setString(inDoc, "BZDA", stacDate);
            outDoc = comCgSaGuGurtprrcprmmGuzcobzddDAO.gu_zco_bzdd_so0001(inDoc);
            // beBzda = XMLUtil.getString(outDoc, "BZDA");		// 현재 월의 마지막 영업일자
            // afBzda = XMLUtil.getString(outDoc, "AF_BZDA");  // 다음 월의 마지막 영업일자
            // 현재 월의 마지막 일자(결산기준일자)
            lastDate = MapDataUtil.getString(outDoc, "LAST_DATE");
            // 선수수수료 계산은 그 달의 마지막 일자가 결산기주일이 된다.
            stacDate = lastDate;
            // Logger.info( "tempDoc \n\n "+XMLUtil.indent(tempDoc) );
            ArrayList arryList = tempList;	/* 수동가이드 예정 (as-is) XMLUtil.toArrayList(tempDoc)*/
            Iterator<Map> itr = arryList.iterator();
            Map listDoc = null;
            while (itr.hasNext()) {
                listDoc = itr.next();
                cnrcMnno = MapDataUtil.getString(listDoc, "CNRC_MNNO");
                guasNo = MapDataUtil.getString(listDoc, "GUAS_NO");
                issuDate = MapDataUtil.getString(listDoc, "ISSU_DATE");
                bnAmt = MapDataUtil.getString(listDoc, "BNAMT");
                prmmClclStda = MapDataUtil.getString(listDoc, "PRMM_CLCL_STDA");
                prmmClclEnda = MapDataUtil.getString(listDoc, "PRMM_CLCL_ENDA");
                dcnt = MapDataUtil.getString(listDoc, "PRMM_DCNT");
                prmm = MapDataUtil.getString(listDoc, "PRMM");
                prrcPrmm = MapDataUtil.getString(listDoc, "PRRC_PRMM");
                // 명세건 수정에 경우에는 명세테이블 update 해준다.
                if (inqrDscd.equalsIgnoreCase("1")) {
                    // 조정후 선수수수료
                    afterPrrcPrmm = MapDataUtil.getString(listDoc, "AF_PRRC_PRMM");
                    inDoc = new HashMap();
                    // 계약관리번호
                    MapDataUtil.setString(inDoc, "CNRC_MNNO", cnrcMnno);
                    MapDataUtil.setString(inDoc, "GUAS_NO", guasNo);

                       ====> 여기까지 작성하고나면, 나머지 issuDate, bnAmt, prmmClclStda, prmmClclEnda, dcnt, prmm, prrcPrmm 을 작성해야할듯


;